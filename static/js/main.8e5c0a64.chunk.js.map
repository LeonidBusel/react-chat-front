{"version":3,"sources":["view/components/activeUser/ActiveUser.js","view/components/colorPicker/ColorPicker.js","view/components/chatArea/ChatArea.js","view/components/privateRoute/PrivateRoute.js","state/slice/loginSlice.js","view/pages/welcome/Welcome.js","view/pages/chat/Chat.js","state/slice/msgSlice.js","utils/chatWebSocket.js","Router.js","state/slice/index.js","state/store.js","index.js"],"names":["Text","Typography","ActiveUser","allUser","className","dataSource","renderItem","item","i","nickName","nickColor","clientId","Item","Meta","title","style","color","ColorPicker","onClose","animation","enableAlpha","defaultColor","TextArea","Input","ChatArea","allMsg","sendMsgHandle","Form","useForm","form","id","message","date","type","description","name","layout","size","onFinish","rows","placeholder","required","htmlType","PrivateRoute","path","exact","component","loginSlice","createSlice","initialState","isLogin","reducers","login","state","payload","logout","console","log","actions","Header","Layout","Content","Title","connect","ws","userLogin","dispatch","bindActionCreators","props","useState","setColor","history","useHistory","useEffect","push","values","nickname","label","extra","maxLength","messageSlice","isOpen","msg","activeUser","open","slice","close","ChatWebSocket","msgAllCallback","activeUserCallback","logoutUserCallback","WebSocket","onopen","send","JSON","stringify","onmessage","data","parse","messages","onerror","error","onclose","useSelector","allActiveUser","readyState","to","span","Routes","Welcome","Chat","store","configureStore","reducer","ReactDOM","render","StrictMode","Router","document","getElementById"],"mappings":"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","file":"static/js/main.8e5c0a64.chunk.js","sourcesContent":["import { List, Typography } from 'antd';\r\n\r\nimport \"./activeUser.scss\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst ActiveUser = ({ allUser }) => {\r\n    return (\r\n        <div className=\"active-user-wrapper\">\r\n            <List\r\n                dataSource={allUser}\r\n                renderItem={(item, i) => {\r\n                    const { nickName, nickColor, clientId } = item;\r\n\r\n                    return (\r\n                        <List.Item key={clientId}>\r\n                            <List.Item.Meta\r\n                                title={<Text style={{ color: nickColor }}>{i+1}. {nickName}</Text>}\r\n                            />\r\n                        </List.Item>\r\n                    )\r\n                }}\r\n            ></List>\r\n        </div>)\r\n}\r\n\r\nexport default ActiveUser;","import { useState } from \"react\";\r\nimport RCColorPicker from \"rc-color-picker\";\r\n\r\nimport 'rc-color-picker/assets/index.css';\r\n\r\nimport \"./colorPicker.scss\";\r\n\r\nconst ColorPicker = ({ onClose, color }) => {\r\n    return (\r\n        <div className=\"color-picker-wrapper\">\r\n            <RCColorPicker animation=\"slide-up\" enableAlpha={true} defaultColor={color} onClose={onClose} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ColorPicker;","import { List, Typography, Form, Input, Button } from 'antd';\r\n\r\nimport \"./chatArea.scss\";\r\n\r\nconst { Text } = Typography;\r\nconst { TextArea } = Input;\r\n\r\nconst ChatArea = ({ allMsg, sendMsgHandle }) => {\r\n    const [form] = Form.useForm();\r\n\r\n    return (\r\n        <div className=\"chat-area-wrapper\">\r\n            <List\r\n                className=\"chat-body\"\r\n                dataSource={allMsg}\r\n                renderItem={item => {\r\n                    const { nickName, nickColor, id, message, date } = item;\r\n\r\n                    return (\r\n                        <List.Item key={id}>\r\n                            <List.Item.Meta\r\n                                title={<><Text style={{ color: nickColor }}>{nickName}</Text> <Text type=\"secondary\">{date}</Text></>}\r\n                                description={<Text>{message}</Text>}\r\n                            />\r\n                        </List.Item>\r\n                    )\r\n                }}\r\n            ></List>\r\n            <Form\r\n                className=\"msg-send-form\"\r\n                form={form}\r\n                name=\"message-form\"\r\n                layout=\"inline\"\r\n                size=\"medium\"\r\n                onFinish={sendMsgHandle}>\r\n\r\n                <Form.Item name=\"message\" className=\"text-area-wrapper\">\r\n                    <TextArea rows={2} placeholder=\"Type msg...\" required />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">Send</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>)\r\n}\r\n\r\nexport default ChatArea;","import { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ path, exact, component }) => {\r\n    return true ? (<Route path={path} exact={exact} component={component} />) :\r\n        (<Redirect to=\"/\" />);\r\n};\r\n\r\nexport default PrivateRoute;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const initialState = {\r\n    isLogin: false,\r\n    nickName: null,\r\n    nickColor: null\r\n};\r\n\r\nexport const loginSlice = createSlice({\r\n    name: 'login',\r\n    initialState,\r\n    reducers: {\r\n        login: (state, { payload }) => {\r\n            state.isLogin = true;\r\n            state.nickName = payload.nickName;\r\n            state.nickColor = payload.nickColor;\r\n        },\r\n        logout: state => {\r\n            console.log(\"logout:\");\r\n            state.isLogin = false;\r\n            state.nickName = null;\r\n            state.nickColor = null;\r\n        }\r\n    }\r\n});\r\n\r\nexport const { login, logout } = loginSlice.actions;\r\n\r\nexport default loginSlice.reducer;","import { useState, useEffect } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Layout, Typography, Form, Input, Button } from 'antd';\r\nimport { ColorPicker } from '@components';\r\nimport { login } from '@slice/loginSlice';\r\nimport \"./welcome.scss\";\r\n\r\nconst { Header, Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nconst Welcome = (props) => {\r\n    const [form] = Form.useForm();\r\n    const [color, setColor] = useState(\"#000\");\r\n    const history = useHistory();\r\n\r\n    const onFinish = (values) => {\r\n        props.login({ nickName: values.nickname, nickColor: color });\r\n    };\r\n\r\n    /* didMount */\r\n    useEffect(() => {\r\n        if (props.userLogin.isLogin) history.push(\"/chat\");\r\n    }, [props.userLogin.isLogin]);\r\n\r\n    const colorPickerHandle = ({ color }) => {\r\n        setColor(color);\r\n    }\r\n\r\n    return (\r\n        <Layout className=\"welcome-wrapper\">\r\n            <Header>\r\n                <Title className=\"title\">Welcome!</Title>\r\n            </Header>\r\n            <Content>\r\n                <Form\r\n                    form={form}\r\n                    name=\"login-form\"\r\n                    layout=\"inline\"\r\n                    size=\"medium\"\r\n                    onFinish={onFinish}>\r\n\r\n                    <Form.Item label=\"Nick Name\" name=\"nickname\" extra=\"max 15 symbols\">\r\n                        <Input placeholder=\"Type your nickname...\" maxLength={15} required />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Nick Color\" name=\"color\">\r\n                        <ColorPicker color={color} onClose={colorPickerHandle} />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Entry</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Content>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        userLogin: state.userLogin\r\n    };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        login\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome);","import { useEffect } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Layout, Typography, Row, Col } from 'antd';\r\nimport { ChatArea, ActiveUser } from \"@components\";\r\nimport { logout } from '@slice/loginSlice';\r\nimport { activeUser, allMsg, close } from '@slice/msgSlice';\r\nimport ChatWebSocket from '@utils/chatWebSocket';\r\n\r\nimport \"./chat.scss\";\r\n\r\nconst { Header, Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nlet ws;\r\nconst Chat = (props) => {\r\n    const history = useHistory();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const allMsg = useSelector(state => state.message.msg);\r\n    const allActiveUser = useSelector(state => state.message.activeUser);\r\n    const { isLogin, nickName, nickColor } = userLogin;\r\n\r\n\r\n    /* didMount */\r\n    useEffect(() => {\r\n        if (!isLogin) {\r\n            history.push(\"/\");\r\n\r\n            return;\r\n        }\r\n\r\n        ws = ChatWebSocket({ nickName, nickColor, msgAllCallback, activeUserCallback, logoutUserCallback });\r\n        console.log(ws);\r\n    }, []);\r\n\r\n    const sendMsgHandle = (values) => {\r\n        ws.send(JSON.stringify({ type: 'SEND_MSG', message: values.message }));\r\n    }\r\n\r\n    const msgAllCallback = (messages) => {\r\n        props.allMsg(messages)\r\n    }\r\n\r\n    const activeUserCallback = (activeUser) => {\r\n        props.activeUser(activeUser)\r\n    }\r\n\r\n    \r\n    const logoutUserCallback = () => {\r\n        props.logout();\r\n        props.close();\r\n\r\n        if (ws.readyState === 1) {\r\n            ws.send(JSON.stringify({ type: 'LOGOUT' }));\r\n        }\r\n    }\r\n\r\n    /* did Update */\r\n    useEffect(() => {\r\n        if (userLogin && !userLogin.isLogin) history.push(\"/\");\r\n    }, [userLogin]);\r\n\r\n    // did unmount\r\n    useEffect(() => {\r\n        return () => {\r\n            if (userLogin.isLogin) {\r\n                logoutUserCallback();\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Layout className=\"chat-wrapper\">\r\n            <Header>\r\n                <Title className=\"title\">Global Chat!</Title>\r\n            </Header>\r\n            <Content className=\"chat-content-wrapper\">\r\n                <Row><Link to=\"/\">&lt; back to welcome page</Link></Row>\r\n                <Row>\r\n                    <Col span={16}><ChatArea allMsg={allMsg} sendMsgHandle={sendMsgHandle} /></Col>\r\n                    <Col span={8}><ActiveUser allUser={allActiveUser} /></Col>\r\n                </Row>\r\n            </Content>\r\n\r\n        </Layout>\r\n    )\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({\r\n        logout,\r\n        activeUser,\r\n        allMsg,\r\n        close\r\n    }, dispatch);\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Chat);\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const initialState = {\r\n    isOpen: false,\r\n    msg: [],\r\n    activeUser: []\r\n};\r\n\r\nexport const messageSlice = createSlice({\r\n    name: 'message',\r\n    initialState,\r\n    reducers: {\r\n        open: state => {\r\n            state.isOpen = true;\r\n        },\r\n        activeUser: (state, { payload }) => {\r\n            state.activeUser = payload.slice();\r\n        },\r\n        allMsg: (state, { payload }) => {\r\n            state.msg = payload.slice();\r\n        },\r\n        close: state => {\r\n            state.isOpen = false;\r\n            state.msg = [];\r\n            state.activeUser = [];\r\n        }\r\n    }\r\n});\r\n\r\nexport const { open, activeUser, allMsg, close } = messageSlice.actions;\r\n\r\nexport default messageSlice.reducer;\r\n","const ChatWebSocket = ({ nickName, nickColor, msgAllCallback, activeUserCallback, logoutUserCallback }) => {\r\n    const ws = new WebSocket(\"wss://chat-nodejs-leonid.herokuapp.com/\");\r\n\r\n    ws.onopen = () => {\r\n        console.log('websocket is connected...');\r\n        ws.send(JSON.stringify({ type: 'LOGIN', nickName, nickColor }));\r\n    };\r\n\r\n    // обработчик входящих сообщений\r\n    ws.onmessage = msg => {\r\n        const data = JSON.parse(msg.data);\r\n\r\n        switch (data.type) {\r\n            case \"ACTIVE_USER\": {\r\n                activeUserCallback(data.activeUser);\r\n                break;\r\n            }\r\n            case \"MSG_ALL\": {\r\n                msgAllCallback(data.messages);\r\n                break;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    ws.onerror = error => {\r\n        console.log(\"socket error\");\r\n\r\n        logoutUserCallback();\r\n    };\r\n\r\n    ws.onclose = () => {\r\n        console.log(\"socket is close\");\r\n\r\n        logoutUserCallback();\r\n    };\r\n\r\n    return ws;\r\n}\r\n\r\nexport default ChatWebSocket;","import { Switch, Route } from \"react-router-dom\";\r\nimport { Welcome, Chat } from '@pages';\r\nimport { PrivateRoute } from \"@components\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/' exact component={Welcome} />\r\n            <PrivateRoute path=\"/chat\" exact component={Chat} />\r\n            <Route path='*' exact component={Welcome} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import userLogin from './loginSlice';\r\nimport message from './msgSlice';\r\n\r\nexport const reducers = {\r\n    userLogin,\r\n    message\r\n};","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducers } from '@slice';\r\n\r\nconst store = configureStore({\r\n  reducer: reducers\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Router from \"./Router\";\nimport store from '@store';\n\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <Router />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}